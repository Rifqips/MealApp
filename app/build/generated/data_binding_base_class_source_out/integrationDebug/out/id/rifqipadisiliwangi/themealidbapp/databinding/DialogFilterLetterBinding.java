// Generated by view binder compiler. Do not edit!
package id.rifqipadisiliwangi.themealidbapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import id.rifqipadisiliwangi.themealidbapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFilterLetterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnFilter;

  @NonNull
  public final EditText etFiiledLetter;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final TextView tvTitleLetter;

  private DialogFilterLetterBinding(@NonNull CardView rootView, @NonNull Button btnFilter,
      @NonNull EditText etFiiledLetter, @NonNull RelativeLayout relativeLayout,
      @NonNull TextView tvTitleLetter) {
    this.rootView = rootView;
    this.btnFilter = btnFilter;
    this.etFiiledLetter = etFiiledLetter;
    this.relativeLayout = relativeLayout;
    this.tvTitleLetter = tvTitleLetter;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFilterLetterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFilterLetterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_filter_letter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFilterLetterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_filter;
      Button btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.et_fiiled_letter;
      EditText etFiiledLetter = ViewBindings.findChildViewById(rootView, id);
      if (etFiiledLetter == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.tv_title_letter;
      TextView tvTitleLetter = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleLetter == null) {
        break missingId;
      }

      return new DialogFilterLetterBinding((CardView) rootView, btnFilter, etFiiledLetter,
          relativeLayout, tvTitleLetter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
